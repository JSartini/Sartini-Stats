{
  "hash": "0d8c49e292b9c725beb7b38a82e03394",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing Climate Exposures using Gifs\"\ndate: 08/12/2025\neditor: source\noutput: html_document\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(GSODR)\nlibrary(tidyverse)\nlibrary(gifski)\nlibrary(gganimate)\n```\n:::\n\n\n## Introduction\n\nThe goal of this document is to present how to use some helpful animation tools within R (the *gifski* and *gganimate* packages) for the purposes of visualizing periodic or seasonal time series data as it varies over the course of a standard epoch. This is useful within a number of contexts, for example when working to understand climate-related exposures over the course of the year. These exposures have consistent seasonal patterns which repeat over the course of each year, so we can aggregate over years and subjects/locations to form estimates of expected exposure over time within any desired window. Animation then allows us to examine how this expected exposure differs as the year progresses. We procede with an example based on the [Global Surface Summary of Day](https://www.ncei.noaa.gov/access/metadata/landing-page/bin/iso?id=gov.noaa.ncdc:C00516) (GSOD) data through the corresponding API in the [*GSODR*](https://cran.r-project.org/web/packages/GSODR/index.html) package. \n\n## GSOD Data\n\nThe GSOD API provides the \"get_GSOD()\" function which can be used to pull climate information collected by a subset of the GSOD stations. Here, I have selected Station 723400-99999, which is a Weather Service station in Little Rock, Arkansas, near where I grew up. We collect data between 1990-1995, focusing on humidity as indicated by the dew point (labelled \"DEWP\" in this dataset, measured in degrees Celsius). This choice of outcome was purely motivated by my own past experience enduring the humidity of my home state.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLR_GSOD = get_GSOD(years = 1990:1995, station = \"723400-99999\") %>%\n    mutate(wdate = ymd(YEARMODA)) %>%\n    rename(dewpoint = DEWP) %>%\n    select(wdate, dewpoint) %>%\n    drop_na()\n```\n:::\n\n\n## Stationary Visualization of GSOD Data\n\nWe can first create a simple visualization of this time series data, using a point plot with smoothing line to understand (seasonal) trends and day-to-day variability after adjusting for these trends.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLR_GSOD %>%\n  ggplot(aes(x = wdate, y = dewpoint)) + \n  geom_point(alpha = 0.4) +\n  geom_smooth(se = F, color = \"steelblue\", method = \"gam\", \n              formula = y ~ s(x, bs = \"cs\", k = 35)) + \n  theme_bw() + \n  labs(x = \"Date\", y = \"Dewpoint (°C)\")\n```\n\n::: {.cell-output-display}\n![](Gifs_files/figure-html/data_vis_stationary-1.png){width=672}\n:::\n:::\n\n\n## Example Animation\n\nWhile the above visualization is sufficient for many applications, what about understanding how patterns of dew point over a fixed period, say 6 months, change as one moves through the year? This could be done by sliding a window over the above plot and juxtaposing the visualizations that result from different window locations. However, creating these windowed visualizations and finding the most interesting contrasts can be time consuming. \n\nAs an alternative, we can create an animation which demonstrates the evolution of this windowed exposure over the course of the year. Using the *gifski* and *gganimate* packages, generating this type of visualization is straightforward. We first expand the data, collecting the appropriate window for each possible start date.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwindow_length = 6*4 # in weeks\n\ngif_df = LR_GSOD %>%\n  group_split(wdate) %>%\n  map(function(x){\n    sday = first(x$wdate)\n    \n    sub_data = LR_GSOD %>%\n      mutate(dt = as.numeric(difftime(wdate, sday, units = \"weeks\"))) %>%\n      filter(dt >= 0 & dt <= window_length)\n    \n    sub_data$month_start = month(sday)\n    sub_data$day_start = mday(sday)\n    \n    return(sub_data)\n  }) %>% \n    list_rbind() %>%\n    mutate(day_idx = ymd(\"1999-12-31\") + months(month_start) + days(day_start))\n\ngraph1 = gif_df %>%\n  ggplot(aes(x = dt, y = dewpoint)) + \n  geom_point(alpha = 0.4, size = 3) +\n  geom_smooth(se = F, color = \"steelblue\") +\n  theme_bw() + \n  labs(x = \"Week of Exposure Window\", y = \"Dewpoint (°C)\")\n\ngraph1.animation = graph1 + \n  transition_time(day_idx) + \n  labs(subtitle = \"Start of Window: {format(frame_time, '%m-%d')}\")\n\nanimate(graph1.animation, height = 500, width = 900, duration = 20, \n        end_pause = 1, nframes = 200)\nanim_save(\"../resources/images/Gif_Exposure.gif\")\n```\n:::\n\n\nWe can now view the saved animation through embedding:\n\n![The exposure animation generated in R.](../resources/images/Gif_Exposure.gif)\n\nWhile this type of animation is helpful in and of itself, it is best combined with similar animations for related outcome variables and other covariates of interest. Dynamic visualization techniques such as this are an important addition to any statisticians toolkit, and we should not hesitate to leverage them (so long as it is appropriate, of course).\n\n\n",
    "supporting": [
      "Gifs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}